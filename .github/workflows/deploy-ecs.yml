# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2 # 이것을 선호하는 AWS 지역으로 설정합니다(예: us-west-1)
  ECR_REPOSITORY: simple-flask-app # 이것을 Amazon ECR 저장소 이름으로 설정하세요
  ECS_SERVICE: flask-service # 이것을 Amazon ECS 서비스 이름으로 설정하세요
  ECS_CLUSTER: flask-cluster # 이것을 Amazon ECS 클러스터 이름으로 설정하세요
  ECS_TASK_DEFINITION: .aws/flask-task.json # 이것을 Amazon ECS 작업 정의 경로로 설정합니다.
                                               # 파일, 예: .aws/task-definition.json
  CONTAINER_NAME: flask # 이것을 컨테이너의 이름으로 설정합니다.
                                               # 작업 정의의 containerDefinitions 섹션

일자리:
  배포:
    이름: 배포
    runs-on: ubuntu-latest
    환경: 생산

    단계:
      - 이름 : 체크아웃
        사용: actions/checkout@v4

      - name: AWS 자격 증명 구성
        사용: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        와 함께:
          aws-액세스-키-ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-지역: ${{ env.AWS_REGION }}

      - 이름: Amazon ECR에 로그인
        id: 로그인-ecr
        사용: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - 이름: Amazon ECR에 이미지 빌드, 태그 지정 및 푸시
        id: 빌드-이미지
        환경:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          이미지 태그: ${{ github.sha }}
        실행: |
          # Docker 컨테이너를 빌드하고
          # ECR에 푸시하여 가능케 하세요
          # ECS에 배포됩니다.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG backend/.
          도커 푸시 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "이미지=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Amazon ECS 작업 정의에 새 이미지 ID를 입력합니다.
        id: task-def
        사용: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        와 함께:
          작업 정의: ${{ env.ECS_TASK_DEFINITION }}
          컨테이너 이름: ${{ env.CONTAINER_NAME }}
          이미지: ${{ steps.build-image.outputs.image }}

      - 이름: Amazon ECS 작업 정의 배포
        사용: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        와 함께:
          작업 정의: ${{ steps.task-def.outputs.task-definition }}
          서비스: ${{ env.ECS_SERVICE }}
          클러스터: ${{ env.ECS_CLUSTER }}
          서비스 안정성 대기: 참
